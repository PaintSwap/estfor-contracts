[
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "target",
        "type": "address"
      }
    ],
    "name": "AddressEmptyCode",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ClaimingTooManyOrders",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "DevFeeNotSet",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "DevFeeTooHigh",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "implementation",
        "type": "address"
      }
    ],
    "name": "ERC1967InvalidImplementation",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ERC1967NonPayable",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "FailedCall",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "taker",
        "type": "address"
      },
      {
        "internalType": "enum IOrderBook.OrderSide",
        "name": "side",
        "type": "uint8"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "quantityRemaining",
        "type": "uint256"
      }
    ],
    "name": "FailedToTakeFromBook",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidInitialization",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "KeyCannotBeZero",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "KeyDoesntExist",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LengthMismatch",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "MaxOrdersNotMultipleOfOrdersInSegment",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NoQuantity",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotERC1155",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotInitializing",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotMaker",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NothingToClaim",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "orderId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "price",
        "type": "uint256"
      }
    ],
    "name": "OrderNotFound",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "orderId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "price",
        "type": "uint256"
      }
    ],
    "name": "OrderNotFoundInTree",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnableInvalidOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "OwnableUnauthorizedAccount",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tick",
        "type": "uint256"
      }
    ],
    "name": "PriceNotMultipleOfTick",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "PriceZero",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ReentrancyGuardReentrantCall",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint8",
        "name": "bits",
        "type": "uint8"
      },
      {
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "SafeCastOverflowedUintDowncast",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "token",
        "type": "address"
      }
    ],
    "name": "SafeERC20FailedOperation",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "TickCannotBeChanged",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "TokenDoesntExist",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "TooManyOrdersHit",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "TotalCostConditionNotMet",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "UUPSUnauthorizedCallContext",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "slot",
        "type": "bytes32"
      }
    ],
    "name": "UUPSUnsupportedProxiableUUID",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ZeroAddress",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "maker",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "enum IOrderBook.OrderSide",
        "name": "side",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "orderId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "price",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "quantity",
        "type": "uint256"
      }
    ],
    "name": "AddedToBook",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256[]",
        "name": "orderIds",
        "type": "uint256[]"
      },
      {
        "indexed": false,
        "internalType": "uint256[]",
        "name": "tokenIds",
        "type": "uint256[]"
      },
      {
        "indexed": false,
        "internalType": "uint256[]",
        "name": "amounts",
        "type": "uint256[]"
      }
    ],
    "name": "ClaimedNFTs",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256[]",
        "name": "orderIds",
        "type": "uint256[]"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "ClaimedTokens",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "maker",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "enum IOrderBook.OrderSide",
        "name": "side",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "price",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "quantity",
        "type": "uint256"
      }
    ],
    "name": "FailedToAddToBook",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint64",
        "name": "version",
        "type": "uint64"
      }
    ],
    "name": "Initialized",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "maker",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256[]",
        "name": "orderIds",
        "type": "uint256[]"
      }
    ],
    "name": "OrdersCancelled",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "taker",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256[]",
        "name": "orderIds",
        "type": "uint256[]"
      },
      {
        "indexed": false,
        "internalType": "uint256[]",
        "name": "quantities",
        "type": "uint256[]"
      }
    ],
    "name": "OrdersMatched",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "devAddr",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "devFee",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "burntFee",
        "type": "uint256"
      }
    ],
    "name": "SetFees",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "maxOrdesrsPerPrice",
        "type": "uint256"
      }
    ],
    "name": "SetMaxOrdersPerPriceLevel",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256[]",
        "name": "tokenIds",
        "type": "uint256[]"
      },
      {
        "components": [
          {
            "internalType": "uint128",
            "name": "tick",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "minQuantity",
            "type": "uint128"
          }
        ],
        "indexed": false,
        "internalType": "struct IOrderBook.TokenIdInfo[]",
        "name": "tokenInfos",
        "type": "tuple[]"
      }
    ],
    "name": "SetTokenIdInfos",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "implementation",
        "type": "address"
      }
    ],
    "name": "Upgraded",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "UPGRADE_INTERFACE_VERSION",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "enum IOrderBook.OrderSide",
        "name": "side",
        "type": "uint8"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "internalType": "uint72",
        "name": "price",
        "type": "uint72"
      }
    ],
    "name": "allOrdersAtPrice",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "maker",
            "type": "address"
          },
          {
            "internalType": "uint24",
            "name": "quantity",
            "type": "uint24"
          },
          {
            "internalType": "uint40",
            "name": "id",
            "type": "uint40"
          }
        ],
        "internalType": "struct IOrderBook.Order[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256[]",
        "name": "orderIds",
        "type": "uint256[]"
      },
      {
        "components": [
          {
            "internalType": "enum IOrderBook.OrderSide",
            "name": "side",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "uint72",
            "name": "price",
            "type": "uint72"
          }
        ],
        "internalType": "struct IOrderBook.CancelOrder[]",
        "name": "orders",
        "type": "tuple[]"
      },
      {
        "components": [
          {
            "internalType": "enum IOrderBook.OrderSide",
            "name": "side",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "uint72",
            "name": "price",
            "type": "uint72"
          },
          {
            "internalType": "uint24",
            "name": "quantity",
            "type": "uint24"
          }
        ],
        "internalType": "struct IOrderBook.LimitOrder[]",
        "name": "newOrders",
        "type": "tuple[]"
      }
    ],
    "name": "cancelAndMakeLimitOrders",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256[]",
        "name": "orderIds",
        "type": "uint256[]"
      },
      {
        "components": [
          {
            "internalType": "enum IOrderBook.OrderSide",
            "name": "side",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "uint72",
            "name": "price",
            "type": "uint72"
          }
        ],
        "internalType": "struct IOrderBook.CancelOrder[]",
        "name": "orders",
        "type": "tuple[]"
      }
    ],
    "name": "cancelOrders",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256[]",
        "name": "coinOrderIds",
        "type": "uint256[]"
      },
      {
        "internalType": "uint256[]",
        "name": "nftOrderIds",
        "type": "uint256[]"
      }
    ],
    "name": "claimAll",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256[]",
        "name": "orderIds",
        "type": "uint256[]"
      }
    ],
    "name": "claimNFTs",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256[]",
        "name": "orderIds",
        "type": "uint256[]"
      }
    ],
    "name": "claimTokens",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint40",
        "name": "orderId",
        "type": "uint40"
      }
    ],
    "name": "getClaimableTokenInfo",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "maker",
            "type": "address"
          },
          {
            "internalType": "uint80",
            "name": "amount",
            "type": "uint80"
          },
          {
            "internalType": "uint16",
            "name": "tokenId",
            "type": "uint16"
          }
        ],
        "internalType": "struct IOrderBook.ClaimableTokenInfo",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "getHighestBid",
    "outputs": [
      {
        "internalType": "uint72",
        "name": "",
        "type": "uint72"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "getLowestAsk",
    "outputs": [
      {
        "internalType": "uint72",
        "name": "",
        "type": "uint72"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "enum IOrderBook.OrderSide",
        "name": "side",
        "type": "uint8"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "internalType": "uint72",
        "name": "price",
        "type": "uint72"
      }
    ],
    "name": "getNode",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint72",
            "name": "parent",
            "type": "uint72"
          },
          {
            "internalType": "uint72",
            "name": "left",
            "type": "uint72"
          },
          {
            "internalType": "uint72",
            "name": "right",
            "type": "uint72"
          },
          {
            "internalType": "uint32",
            "name": "tombstoneOffset",
            "type": "uint32"
          },
          {
            "internalType": "bool",
            "name": "red",
            "type": "bool"
          }
        ],
        "internalType": "struct BokkyPooBahsRedBlackTreeLibrary.Node",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "getTokenIdInfo",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint128",
            "name": "tick",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "minQuantity",
            "type": "uint128"
          }
        ],
        "internalType": "struct IOrderBook.TokenIdInfo",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract IERC1155",
        "name": "nft",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "devAddr",
        "type": "address"
      },
      {
        "internalType": "uint16",
        "name": "devFee",
        "type": "uint16"
      },
      {
        "internalType": "uint8",
        "name": "burntFee",
        "type": "uint8"
      },
      {
        "internalType": "uint16",
        "name": "maxOrdersPerPrice",
        "type": "uint16"
      },
      {
        "internalType": "contract IActivityPoints",
        "name": "activityPoints",
        "type": "address"
      }
    ],
    "name": "initialize",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "enum IOrderBook.OrderSide",
            "name": "side",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "uint72",
            "name": "price",
            "type": "uint72"
          },
          {
            "internalType": "uint24",
            "name": "quantity",
            "type": "uint24"
          }
        ],
        "internalType": "struct IOrderBook.LimitOrder[]",
        "name": "orders",
        "type": "tuple[]"
      }
    ],
    "name": "limitOrders",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "enum IOrderBook.OrderSide",
            "name": "side",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "uint24",
            "name": "quantity",
            "type": "uint24"
          },
          {
            "internalType": "uint256",
            "name": "totalCost",
            "type": "uint256"
          }
        ],
        "internalType": "struct IOrderBook.MarketOrder",
        "name": "order",
        "type": "tuple"
      }
    ],
    "name": "marketOrder",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint40[]",
        "name": "orderIds",
        "type": "uint40[]"
      }
    ],
    "name": "nftsClaimable",
    "outputs": [
      {
        "internalType": "uint256[]",
        "name": "amounts",
        "type": "uint256[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "enum IOrderBook.OrderSide",
        "name": "side",
        "type": "uint8"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "internalType": "uint72",
        "name": "price",
        "type": "uint72"
      }
    ],
    "name": "nodeExists",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "uint256[]",
        "name": "",
        "type": "uint256[]"
      },
      {
        "internalType": "uint256[]",
        "name": "",
        "type": "uint256[]"
      },
      {
        "internalType": "bytes",
        "name": "",
        "type": "bytes"
      }
    ],
    "name": "onERC1155BatchReceived",
    "outputs": [
      {
        "internalType": "bytes4",
        "name": "",
        "type": "bytes4"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "bytes",
        "name": "",
        "type": "bytes"
      }
    ],
    "name": "onERC1155Received",
    "outputs": [
      {
        "internalType": "bytes4",
        "name": "",
        "type": "bytes4"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "proxiableUUID",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "activityPoints",
        "type": "address"
      }
    ],
    "name": "setActivityPoints",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "devAddr",
        "type": "address"
      },
      {
        "internalType": "uint16",
        "name": "devFee",
        "type": "uint16"
      },
      {
        "internalType": "uint8",
        "name": "burntFee",
        "type": "uint8"
      }
    ],
    "name": "setFees",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint16",
        "name": "maxOrdersPerPrice",
        "type": "uint16"
      }
    ],
    "name": "setMaxOrdersPerPrice",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256[]",
        "name": "tokenIds",
        "type": "uint256[]"
      },
      {
        "components": [
          {
            "internalType": "uint128",
            "name": "tick",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "minQuantity",
            "type": "uint128"
          }
        ],
        "internalType": "struct IOrderBook.TokenIdInfo[]",
        "name": "tokenIdInfos",
        "type": "tuple[]"
      }
    ],
    "name": "setTokenIdInfos",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes4",
        "name": "interfaceId",
        "type": "bytes4"
      }
    ],
    "name": "supportsInterface",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint40[]",
        "name": "orderIds",
        "type": "uint40[]"
      }
    ],
    "name": "tokensClaimable",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "updateRoyaltyFee",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newImplementation",
        "type": "address"
      },
      {
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      }
    ],
    "name": "upgradeToAndCall",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  }
]
